Namn Simon Tillström


TASK 1:
1.​ Skapa en databas vid namn citydb.
Fråga: use citydb
Svar: switched to db citydb

2.​ Sätt in följande dokument i en kollektion med namn: cities
a.​ _id:1, name: Stockholm, population: 1372565 
b.​ _id:2, name: Göteborg, population: 549839
c.​ _id:3, name: Malmö, population: 280415 
d.​ _id:4, name: Uppsala, population: 140454 
e.​ _id:5, name: Västerås, population: 110877

Fråga:
a. db.cities.insertOne({_id:1, name: "Stockholm", population: 1372565})
b. db.cities.insertOne({_id:2, name: "Göteborg", population: 549839})
c. db.cities.insertOne({_id:3, name: "Malmö", population: 280415})
d. db.cities.insertOne({_id:4, name: "Uppsala", population: 140454})
e. db.cities.insertOne({_id:5, name: "Västerås", population: 110877})

Svar:
a. { "acknowledged" : true, "insertedId" : 1 }
b. { "acknowledged" : true, "insertedId" : 2 }
c. { "acknowledged" : true, "insertedId" : 3 }
d. { "acknowledged" : true, "insertedId" : 4 }
e. { "acknowledged" : true, "insertedId" : 5 }

3. Hitta ett dokument där namnet är “Malmö” och visa bara “namn” och  “population”.
Fråga: db.cities.find({name: "Malmö"}, {_id: 0})
Svar: { "name" : "Malmö", "population" : 280415 }

4. Uppdatera dokumentet som har “namn” “Göteborg” med “population” 549890
Fråga: db.cities.updateOne({name: "Göteborg"}, {$set: {population: 549890}})
Svar: { "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }

5.​ Ta bort dokumentet med _id:4
Fråga: db.cities.deleteOne({_id: 4})
Svar: { "acknowledged" : true, "deletedCount" : 1 }

6.​ Uppdatera dokumentet som har “namn” “Västerås” och öka (med increment)  ”population” fält så att det blir 110879. (increment by 2)
Fråga: db.cities.updateOne({name: "Västerås"}, {$inc: { population: 2} })
Svar: { "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }

7.​ Lägg till ett fält “country” och värdet “Sweden” till alla dokument.
Fråga: db.cities.updateMany({}, {$set: {country: "Sweden"}})
Svar: { "acknowledged" : true, "matchedCount" : 4, "modifiedCount" : 4 }

8.​ Byt namn på fältet “country” till “Country”.
Fråga: db.cities.updateMany({}, {$rename: {country: "Country"}})
Svar: { "acknowledged" : true, "matchedCount" : 4, "modifiedCount" : 4 }



TASK 2:

1.​ Skapa en databas vid namn animalsdb.
Fråga: use animalsdb
Svar: switched to db animalsdb

2. Gå till databasen animalsdb.
Hände ovan den  när den skapades.
När man skriver "use" så kollar shell om databasen finns, och går dit om den gör det.
Finns den inte så skapar den en ny databas vid det namnet och går dit direkt.

3.​ Skriv i mongo-skalet : load ("animals.js"). Vad gör den raden? Visa resultatet. 
Fråga: load("C:/data/animals.js")
Vad gör raden? Kör JS-scriptet, som innehåller en insert på en array av djur och data om dem.
Denna insert är scriptad till att inserta en collection vid namn animals.
Det kan också hittas genom att skriva queryn "show collections" i animalsdb databasen.
Svar: true

4.​ Hitta alla data från collection animals.
I animalsdb databasen skriver vi:
Fråga: db.animals.find()
Svar:
{ "_id" : ObjectId("5e1f078326d2222403a15cfd"), "name" : "Elephant", "color" : "grey", "weight" : 7000, "has_tusks" : true, "data" : [ "mammal", "herbivore", "live in groups" ], "found_in" : [ "sub-Saharan Africa", "South Asia", "Southeast Asia" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15cfe"), "name" : "Elk", "color" : "brown", "weight" : 395, "min_weight_male" : 320, "max_weight_male" : 475, "min_weight_female" : 275, "max_weight_female" : 375, "has_antlers" : true, "data" : [ "mammal", "deer family", "herbivore" ], "found_in" : [ "Canada", "Alaska", "New England", "Scandinavia", "Latvia", "Estonia", "Russia" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15cff"), "name" : "Fox", "color" : "orange", "weight" : 6, "suborder" : "Caniformia", "class" : "Mammalia", "order" : "Carnivora", "family" : "Canidae", "data" : [ "mammal", "omnivore" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15d00"), "name" : "Wolf", "class" : "Mammalia", "order" : "Carnivora", "suborder" : "Caniformia", "color" : "grey", "weight" : 44, "min_weight_male" : 43, "max_weight_male" : 45, "min_weight_female" : 36, "max_weight_female" : 38.5, "found_in" : [ "Eurasia", "North America" ], "data" : [ "mammal", "carnivore", "canid", "live in groups" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15d01"), "name" : "Bear", "color" : "brown", "weight" : 505, "found_in" : [ "North America", "South America", "Europe", "Asia" ], "class" : "Mammalia", "order" : "Carnivora", "suborder" : "Caniformia", "family" : "Ursidae", "data" : [ "mammal", "carnivore", "nonretractile claws", "rounded ears", "can stand on its rear legs" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15d02"), "name" : "Hyena", "family" : "Hyaenidae", "suborder" : "Feliformia", "order" : "Carnivora", "color" : "brown", "weight" : 47, "min_weight_male" : 40.5, "max_weight_male" : 55, "min_weight_female" : 44.5, "max_weight_female" : 63.9, "spotted" : true, "data" : [ "mammal", "carnivore", "live in groups" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15d03"), "name" : "Orangutan", "alternative_name" : "Orangutang", "color" : "orange", "weight" : 75, "data" : [ "herbivore", "opposable thumbs", "opposable big toe", "eat fruits", "primate", "ape" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15d04"), "name" : "Reindeer", "class" : "Mammalia", "color" : "grey", "weight" : 200, "alternative_name" : "caribou", "has_antlers" : true, "found_in" : [ "northern Europe", "Siberia", "North America" ], "data" : [ "mammal", "deer family", "herbivore", "live in groups" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15d05"), "name" : "Gorilla", "color" : "black", "weight" : 155, "data" : [ "primate", "ape", "herbivore", "can stand on its rear legs", "live in groups" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15d06"), "name" : "Chimpanzee", "color" : "black", "weight" : 70, "data" : [ "primate", "ape", "omnivore" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15d07"), "name" : "Marten", "order" : "Carnivora", "suborder" : "Caniformia", "family" : "Mustelidae", "color" : "brown", "weight" : 1.5, "data" : [ "solitary animal" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15d08"), "name" : "Mongoose", "color" : "brown", "weight" : 1.7, "family" : "Herpestidae", "suborder" : "Feliformia", "order" : "Carnivora", "data" : [ "carnivore", "eat venomous snakes" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15d09"), "name" : "Meerkat", "found_in" : [ "Botswana", "Namibia", "Angola", "South Africa" ], "color" : "yellow", "family" : "Herpestidae", "suborder" : "Feliformia", "order" : "Carnivora", "weight" : 1, "data" : [ "can stand on its rear legs", "live in groups" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15d0a"), "name" : "Lion", "color" : "yellow", "weight" : 200, "class" : "Mammalia", "order" : "Carnivora", "family" : "Felidae", "subfamily" : "Pantherinae", "suborder" : "Feliformia", "data" : [ "live in groups", "carnivore", "smaller than tigers", "protractible claws" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15d0b"), "name" : "Raccoon", "color" : "gray", "weight" : 6, "suborder" : "Caniformia", "class" : "Mammalia", "order" : "Carnivora", "family" : "Procyonidae", "data" : [ "omnivore", "nocturnal", "plantigrade locomotion", "can stand on its rear legs" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15d0c"), "name" : "Black panther", "class" : "Mammalia", "order" : "Carnivora", "family" : "Felidae", "subfamily" : "Pantherinae", "suborder" : "Feliformia", "color" : "black", "weight" : 60, "data" : [ "are leopards in Asia and Africa", "are black jaguars in the Americas", "big cat" ] }

5.​ Hitta hur många djur det finns totalt i databasen animals?
Fråga: db.animals.count()
Svar: 16

6.​ Lägg till en array “favorit_food” med “blueberry, honey och ants” för “Bear” .
Fråga: db.animals.updateOne({name: "Bear"}, {$set: {favourite_food: ["blueberry", "honey", "ants"]}})
Svar: { "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }

7.​ Ta bort ants och honey från arrayen “favorit_food” och “rounded ears” från  arrayen
Fråga: db.animals.updateOne({name: "Bear"}, { $pull: {favourite_food: {$in: ["honey", "ants"]}, data: "rounded ears"}})
Svar: { "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }

8.​ Hitta hur många gula djur det finns i kollektionen.
Fråga: db.animals.count({color: "yellow"})
Svar: 2

9.​ Hitta alla namnet på alla djur vars färg är brun och som lever i Asien och visa  deras namn, color och found_in . 
Fråga: db.animals.find({color: "brown", found_in: {$regex: ".*[Aa]sia*"}}, {name:1, color:1, found_in:1, _id:0})
Svar: { "name" : "Bear", "color" : "brown", "found_in" : [ "North America", "South America", "Europe", "Asia" ] }

10.​ Lägg till fältet “litter_size” med värdet “4-6-kits” för “Fox”.
Fråga: db.animals.updateOne({name: "Fox"}, {$set: {litter_size: "4-6-kits"}})
Svar: { "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }

11.​ Lägg till ett fält med namn “likes meat” i arrayen “data” för alla med "order":  "Carnivora"  och som är gula till färgen.
Fråga: db.animals.updateMany({order: "Carnivora", color: "yellow"}, {$addToSet: { Data: "likes meat"}})
Svar: { "acknowledged" : true, "matchedCount" : 2, "modifiedCount" : 2 }

12.​ Gruppera efter färger och visa antal djur per färg.
Fråga: db.animals.aggregate([{"$group" : {_id:"$color", count:{$sum:1}}}])
Svar:
{ "_id" : "brown", "count" : 5 }
{ "_id" : "yellow", "count" : 2 }
{ "_id" : "orange", "count" : 2 }
{ "_id" : "grey", "count" : 3 }
{ "_id" : "black", "count" : 3 }
{ "_id" : "gray", "count" : 1 }

13.​ Skriv ut antalet djur som väger mer än 100.
Fråga: db.animals.count({weight: {$gt: 100}})
Svar: 6

14.​ Skriv ut djur med “order” “Carnivora”, sorterat efter weight i fallande ordning
Fråga: db.animals.find({order: "Carnivora"}).sort({weight: -1})
Svar:
{ "_id" : ObjectId("5e1f078326d2222403a15d01"), "name" : "Bear", "color" : "brown", "weight" : 505, "found_in" : [ "North America", "South America", "Europe", "Asia" ], "class" : "Mammalia", "order" : "Carnivora", "suborder" : "Caniformia", "family" : "Ursidae", "data" : [ "mammal", "carnivore", "nonretractile claws", "can stand on its rear legs" ], "favourite_food" : [ "blueberry" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15d0a"), "name" : "Lion", "color" : "yellow", "weight" : 200, "class" : "Mammalia", "order" : "Carnivora", "family" : "Felidae", "subfamily" : "Pantherinae", "suborder" : "Feliformia", "data" : [ "live in groups", "carnivore", "smaller than tigers", "protractible claws" ], "Data" : [ "likes meat" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15d0c"), "name" : "Black panther", "class" : "Mammalia", "order" : "Carnivora", "family" : "Felidae", "subfamily" : "Pantherinae", "suborder" : "Feliformia", "color" : "black", "weight" : 60, "data" : [ "are leopards in Asia and Africa", "are black jaguars in the Americas", "big cat" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15d02"), "name" : "Hyena", "family" : "Hyaenidae", "suborder" : "Feliformia", "order" : "Carnivora", "color" : "brown", "weight" : 47, "min_weight_male" : 40.5, "max_weight_male" : 55, "min_weight_female" : 44.5, "max_weight_female" : 63.9, "spotted" : true, "data" : [ "mammal", "carnivore", "live in groups" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15d00"), "name" : "Wolf", "class" : "Mammalia", "order" : "Carnivora", "suborder" : "Caniformia", "color" : "grey", "weight" : 44, "min_weight_male" : 43, "max_weight_male" : 45, "min_weight_female" : 36, "max_weight_female" : 38.5, "found_in" : [ "Eurasia", "North America" ], "data" : [ "mammal", "carnivore", "canid", "live in groups" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15cff"), "name" : "Fox", "color" : "orange", "weight" : 6, "suborder" : "Caniformia", "class" : "Mammalia", "order" : "Carnivora", "family" : "Canidae", "data" : [ "mammal", "omnivore" ], "litter_size" : "4-6-kits" }
{ "_id" : ObjectId("5e1f078326d2222403a15d0b"), "name" : "Raccoon", "color" : "gray", "weight" : 6, "suborder" : "Caniformia", "class" : "Mammalia", "order" : "Carnivora", "family" : "Procyonidae", "data" : [ "omnivore", "nocturnal", "plantigrade locomotion", "can stand on its rear legs" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15d08"), "name" : "Mongoose", "color" : "brown", "weight" : 1.7, "family" : "Herpestidae", "suborder" : "Feliformia", "order" : "Carnivora", "data" : [ "carnivore", "eat venomous snakes" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15d07"), "name" : "Marten", "order" : "Carnivora", "suborder" : "Caniformia", "family" : "Mustelidae", "color" : "brown", "weight" : 1.5, "data" : [ "solitary animal" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15d09"), "name" : "Meerkat", "found_in" : [ "Botswana", "Namibia", "Angola", "South Africa" ], "color" : "yellow", "family" : "Herpestidae", "suborder" : "Feliformia", "order" : "Carnivora", "weight" : 1, "data" : [ "can stand on its rear legs", "live in groups" ], "Data" : [ "likes meat" ] }


15.​ Hitta alla dokument som har “mammal” ​eller​ "carnivore" i deras “data” fält.
Fråga: db.animals.find({$or: [{data: "mammal"}, {data: "carnivora"}]})
Svar:
{ "_id" : ObjectId("5e1f078326d2222403a15cfd"), "name" : "Elephant", "color" : "grey", "weight" : 7000, "has_tusks" : true, "data" : [ "mammal", "herbivore", "live in groups" ], "found_in" : [ "sub-Saharan Africa", "South Asia", "Southeast Asia" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15cfe"), "name" : "Elk", "color" : "brown", "weight" : 395, "min_weight_male" : 320, "max_weight_male" : 475, "min_weight_female" : 275, "max_weight_female" : 375, "has_antlers" : true, "data" : [ "mammal", "deer family", "herbivore" ], "found_in" : [ "Canada", "Alaska", "New England", "Scandinavia", "Latvia", "Estonia", "Russia" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15cff"), "name" : "Fox", "color" : "orange", "weight" : 6, "suborder" : "Caniformia", "class" : "Mammalia", "order" : "Carnivora", "family" : "Canidae", "data" : [ "mammal", "omnivore" ], "litter_size" : "4-6-kits" }
{ "_id" : ObjectId("5e1f078326d2222403a15d00"), "name" : "Wolf", "class" : "Mammalia", "order" : "Carnivora", "suborder" : "Caniformia", "color" : "grey", "weight" : 44, "min_weight_male" : 43, "max_weight_male" : 45, "min_weight_female" : 36, "max_weight_female" : 38.5, "found_in" : [ "Eurasia", "North America" ], "data" : [ "mammal", "carnivore", "canid", "live in groups" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15d01"), "name" : "Bear", "color" : "brown", "weight" : 505, "found_in" : [ "North America", "South America", "Europe", "Asia" ], "class" : "Mammalia", "order" : "Carnivora", "suborder" : "Caniformia", "family" : "Ursidae", "data" : [ "mammal", "carnivore", "nonretractile claws", "can stand on its rear legs" ], "favourite_food" : [ "blueberry" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15d02"), "name" : "Hyena", "family" : "Hyaenidae", "suborder" : "Feliformia", "order" : "Carnivora", "color" : "brown", "weight" : 47, "min_weight_male" : 40.5, "max_weight_male" : 55, "min_weight_female" : 44.5, "max_weight_female" : 63.9, "spotted" : true, "data" : [ "mammal", "carnivore", "live in groups" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15d04"), "name" : "Reindeer", "class" : "Mammalia", "color" : "grey", "weight" : 200, "alternative_name" : "caribou", "has_antlers" : true, "found_in" : [ "northern Europe", "Siberia", "North America" ], "data" : [ "mammal", "deer family", "herbivore", "live in groups" ] }

16.​ Hitta alla dokument som har “mammal” ​och​ "carnivore" i deras “data” fält.
Fråga: db.animals.find({$and: [{data: "mammal"}, {data: "carnivore"}]})
Svar:
{ "_id" : ObjectId("5e1f078326d2222403a15d00"), "name" : "Wolf", "class" : "Mammalia", "order" : "Carnivora", "suborder" : "Caniformia", "color" : "grey", "weight" : 44, "min_weight_male" : 43, "max_weight_male" : 45, "min_weight_female" : 36, "max_weight_female" : 38.5, "found_in" : [ "Eurasia", "North America" ], "data" : [ "mammal", "carnivore", "canid", "live in groups" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15d01"), "name" : "Bear", "color" : "brown", "weight" : 505, "found_in" : [ "North America", "South America", "Europe", "Asia" ], "class" : "Mammalia", "order" : "Carnivora", "suborder" : "Caniformia", "family" : "Ursidae", "data" : [ "mammal", "carnivore", "nonretractile claws", "can stand on its rear legs" ], "favourite_food" : [ "blueberry" ] }
{ "_id" : ObjectId("5e1f078326d2222403a15d02"), "name" : "Hyena", "family" : "Hyaenidae", "suborder" : "Feliformia", "order" : "Carnivora", "color" : "brown", "weight" : 47, "min_weight_male" : 40.5, "max_weight_male" : 55, "min_weight_female" : 44.5, "max_weight_female" : 63.9, "spotted" : true, "data" : [ "mammal", "carnivore", "live in groups" ] }


TASK 3:
Även här ska ni skriva både satserna och vad mongo svarar (resultat). 
1. Sätt in följande record i kollektion orders: 
{ 
  "Id": 100, 
  "Name": "Eva", 
  "Subscriber": true, 
  "Payment": { 
    "Type": "Credit-Card",
    "Total": 400, 
    "Success": true 
  },
  "Note": "1st Complete Record"
}, 
{ 
  "Id": 101,
  "Name": "Johan",
  "Subscriber": true, 
  "Payment": { 
    "Type": "Debit-Card", 
    "Total": 500, 
    "Success": true 
  }, 
  "Note":null 
}, 
{ 
  "Id": 102, 
  "Name": "Matilda", 
  "Subscriber": true,
  "Payment": { 
    "Type": "Credit-Card",
    "Total": 700,
    "Success": false 
   } 
},
{ 
  "Id": 103,
  "Name": "Mikael",
  "Subscriber": false,
  "Payment": null,
  "Note": "Payment is Null" 
}, 
{ 
  "Id": 104, 
  "Name": "Rikard", 
  "Subscriber": false, 
  "Payment": { 
    "Type": "Debit-Card", 
    "Total": 300, 
    "Success": false 
  }, 
  "Note": "Completed Payment" 
}

Fråga:
db.orders.insertMany([{
...   "Id": 100,
...   "Name": "Eva",
...   "Subscriber": true,
...   "Payment": {
...     "Type": "Credit-Card",
...     "Total": 400,
...     "Success": true
...   },
...   "Note": "1st Complete Record"
... },
... {
...   "Id": 101,
...   "Name": "Johan",
...   "Subscriber": true,
...   "Payment": {
...     "Type": "Debit-Card",
...     "Total": 500,
...     "Success": true
...   },
...   "Note":null
... },
... {
...   "Id": 102,
...   "Name": "Matilda",
...   "Subscriber": true,
...   "Payment": {
...     "Type": "Credit-Card",
...     "Total": 700,
...     "Success": false
...    }
... },
... {
...   "Id": 103,
...   "Name": "Mikael",
...   "Subscriber": false,
...   "Payment": null,
...   "Note": "Payment is Null"
... },
... {
...   "Id": 104,
...   "Name": "Rikard",
...   "Subscriber": false,
...   "Payment": {
...     "Type": "Debit-Card",
...     "Total": 300,
...     "Success": false
...   },
...   "Note": "Completed Payment"
... }])

Svar:
{
        "acknowledged" : true,
        "insertedIds" : [
                ObjectId("5e2034142c17c7ede7debae8"),
                ObjectId("5e2034142c17c7ede7debae9"),
                ObjectId("5e2034142c17c7ede7debaea"),
                ObjectId("5e2034142c17c7ede7debaeb"),
                ObjectId("5e2034142c17c7ede7debaec")
        ]
}

2. Hitta alla dokument där fältet “Note” är “null” eller saknas .
Fråga: db.orders.find({$or: [{Note: null}, {Note: {$exists: false}}]})
Svar:
{ "_id" : ObjectId("5e2034142c17c7ede7debae9"), "Id" : 101, "Name" : "Johan", "Subscriber" : true, "Payment" : { "Type" : "Debit-Card", "Total" : 500, "Success" : true }, "Note" : null }
{ "_id" : ObjectId("5e2034142c17c7ede7debaea"), "Id" : 102, "Name" : "Matilda", "Subscriber" : true, "Payment" : { "Type" : "Credit-Card", "Total" : 700, "Success" : false } }

3. Hitta alla dokument där fältet “Note” saknas.
Fråga: db.orders.find({Note: {$exists: false}})
Svar: { "_id" : ObjectId("5e2034142c17c7ede7debaea"), "Id" : 102, "Name" : "Matilda", "Subscriber" : true, "Payment" : { "Type" : "Credit-Card", "Total" : 700, "Success" : false } }

4. Hitta alla dokument som har "Type": "Credit-Card" sorterat efter “Total” i stigande ordning.
Fråga: db.orders.find({"Payment.Type": "Credit-Card"}).sort({"Payment.Total": 1})
Svar:
{ "_id" : ObjectId("5e2034142c17c7ede7debae8"), "Id" : 100, "Name" : "Eva", "Subscriber" : true, "Payment" : { "Type" : "Credit-Card", "Total" : 400, "Success" : true }, "Note" : "1st Complete Record" }
{ "_id" : ObjectId("5e2034142c17c7ede7debaea"), "Id" : 102, "Name" : "Matilda", "Subscriber" : true, "Payment" : { "Type" : "Credit-Card", "Total" : 700, "Success" : false } }

5. Sortera all dokument efter Total i fallande ordning och visa bara dokument 2 och 3.
Fråga: db.orders.find({}).sort({"Payment.Total": -1}).skip(1).limit(2)
Svar:
{ "_id" : ObjectId("5e2034142c17c7ede7debae9"), "Id" : 101, "Name" : "Johan", "Subscriber" : true, "Payment" : { "Type" : "Debit-Card", "Total" : 500, "Success" : true }, "Note" : null }
{ "_id" : ObjectId("5e2034142c17c7ede7debae8"), "Id" : 100, "Name" : "Eva", "Subscriber" : true, "Payment" : { "Type" : "Credit-Card", "Total" : 400, "Success" : true }, "Note" : "1st Complete Record" }

6. Aggregera “Success” och visa antal i fallande ordning. (Hur många “Success” är “true” och hur många är “false”).
Fråga: db.orders.aggregate([{$group: {_id: "$Payment.Success" , count: {$sum:1}}}, {$sort: {count:-1}}])
Svar:
{ "_id" : true, "count" : 2 }
{ "_id" : false, "count" : 2 }
{ "_id" : null, "count" : 1 }